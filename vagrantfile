# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

current_dir    = File.dirname(File.expand_path(__FILE__))
configs        = YAML.load_file("#{current_dir}/config.yaml")
provider_config = configs['configs'][configs['configs']['provider']]
common_config = configs['configs']['common']
provider = configs['configs']['provider']

puts provider
puts provider_config['box']
puts provider_config['box_version']

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # shared networking configuration
  config.vm.network "forwarded_port", guest: 3389, host: 8389
  
  config.vm.box = provider_config['box']
  config.vm.box_version = provider_config['box_version']

  if provider == 'virtualbox'
  puts 'Running Virtual box config'
    config.vm.provider "virtualbox" do |v|
      # Set memory and vCPU
      v.memory = common_config['memory']
      v.cpus = common_config['cpus']
    end
  elsif provider == 'parallels'
  puts 'Running Parallels config'
    config.vm.provider "parallels" do |prl|
      prl.memory = common_config['memory']
      prl.cpus = common_config['cpus']
    end
  end

  # Copy setup files into the VM
  config.vm.provision "file", source: "resources/" << common_config['openvino'], destination: "$HOME/intel_open_vino/" << common_config['openvino']
  config.vm.provision "file", source: "resources/silent_install.txt", destination: "$HOME/intel_open_vino/silent_install.txt"
  config.vm.provision "file", source: "resources/startwm.sh", destination: "$HOME/startwm.sh"
  config.vm.provision "file", source: "resources/km-0809.ini", destination: "$HOME/km-0809.ini"
  # Run the Ansible playbook to provision everything
  config.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "provision/playbook.yml"
  end

end